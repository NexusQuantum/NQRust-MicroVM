openapi: 3.0.3
info:
  title: manager
  description: ''
  license:
    name: ''
  version: 0.1.0
paths:
  /v1/hosts/register:
    post:
      tags:
      - Hosts
      operationId: register
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterHostRequest'
        required: true
      responses:
        '200':
          description: Host registered
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegisterHostResponse'
        '500':
          description: Failed to register host
  /v1/hosts/{id}/heartbeat:
    post:
      tags:
      - Hosts
      operationId: heartbeat
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HostHeartbeatRequest'
        required: true
      responses:
        '200':
          description: Heartbeat recorded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OkResponse'
        '404':
          description: Host not found
        '500':
          description: Failed to record heartbeat
  /v1/images:
    get:
      tags:
      - Images
      operationId: list
      parameters:
      - name: kind
        in: path
        required: true
        schema:
          type: string
          nullable: true
      - name: project
        in: path
        required: true
        schema:
          type: string
          nullable: true
      - name: name
        in: path
        required: true
        schema:
          type: string
          nullable: true
      responses:
        '200':
          description: Images listed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListImagesResp'
        '500':
          description: Failed to list images
    post:
      tags:
      - Images
      operationId: create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateImageReq'
        required: true
      responses:
        '200':
          description: Image registered
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateImageResp'
        '400':
          description: Invalid image path
        '500':
          description: Failed to store image metadata
  /v1/images/{id}:
    get:
      tags:
      - Images
      operationId: get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        '200':
          description: Image fetched
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetImageResp'
        '404':
          description: Image not found
        '500':
          description: Failed to fetch image
    delete:
      tags:
      - Images
      operationId: delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        '200':
          description: Image deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OkResponse'
        '404':
          description: Image not found
        '500':
          description: Failed to delete image
  /v1/logs/tail:
    get:
      tags:
      - Logs
      summary: Super simple file read (dev only). Frontend can poll.
      operationId: tail_once
      parameters:
      - name: path
        in: query
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Log tailed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TailLogResponse'
  /v1/snapshots/{id}:
    get:
      tags:
      - Snapshots
      operationId: get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        '200':
          description: Snapshot fetched
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSnapshotResponse'
        '404':
          description: Snapshot not found
  /v1/snapshots/{id}/instantiate:
    post:
      tags:
      - Snapshots
      operationId: instantiate
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        description: Optional overrides when instantiating a snapshot
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InstantiateSnapshotReq'
        required: true
      responses:
        '200':
          description: Snapshot instantiated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InstantiateSnapshotResp'
        '404':
          description: Snapshot not found
        '502':
          description: Failed to instantiate snapshot
  /v1/templates:
    get:
      tags:
      - Templates
      operationId: list
      responses:
        '200':
          description: Templates listed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTemplatesResp'
        '500':
          description: Failed to list templates
    post:
      tags:
      - Templates
      operationId: create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTemplateReq'
        required: true
      responses:
        '200':
          description: Template created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateTemplateResp'
        '500':
          description: Failed to create template
  /v1/templates/{id}:
    get:
      tags:
      - Templates
      operationId: get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        '200':
          description: Template fetched
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTemplateResp'
        '404':
          description: Template not found
        '500':
          description: Failed to fetch template
  /v1/templates/{id}/instantiate:
    post:
      tags:
      - Templates
      operationId: instantiate
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InstantiateTemplateReq'
        required: true
      responses:
        '200':
          description: Template instantiated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InstantiateTemplateResp'
        '404':
          description: Template not found
        '500':
          description: Failed to instantiate template
  /v1/vms:
    get:
      tags:
      - VMs
      operationId: list
      responses:
        '200':
          description: VMs listed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListVmsResponse'
        '500':
          description: Failed to list VMs
    post:
      tags:
      - VMs
      operationId: create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateVmReq'
        required: true
      responses:
        '200':
          description: VM created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateVmResponse'
        '500':
          description: Failed to create VM
  /v1/vms/{id}:
    get:
      tags:
      - VMs
      operationId: get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        '200':
          description: VM fetched
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetVmResponse'
        '404':
          description: VM not found
        '500':
          description: Failed to fetch VM
    delete:
      tags:
      - VMs
      operationId: delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        '200':
          description: VM deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OkResponse'
        '500':
          description: Failed to delete VM
  /v1/vms/{id}/snapshots:
    get:
      tags:
      - Snapshots
      operationId: list_for_vm
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        '200':
          description: Snapshots listed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListSnapshotsResponse'
        '500':
          description: Failed to list snapshots
    post:
      tags:
      - Snapshots
      operationId: create
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        description: Optional agent snapshot configuration
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSnapshotRequest'
        required: true
      responses:
        '200':
          description: Snapshot created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateSnapshotResponse'
        '404':
          description: VM not found
        '500':
          description: Failed to record snapshot
        '502':
          description: Agent interaction failed
  /v1/vms/{id}/stop:
    post:
      tags:
      - VMs
      operationId: stop
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        '200':
          description: VM stopped
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OkResponse'
        '500':
          description: Failed to stop VM
components:
  schemas:
    CreateImageReq:
      type: object
      required:
      - kind
      - name
      - host_path
      - sha256
      - size
      properties:
        host_path:
          type: string
        kind:
          type: string
        name:
          type: string
        project:
          type: string
          nullable: true
        sha256:
          type: string
        size:
          type: integer
          format: int64
    CreateImageResp:
      type: object
      required:
      - id
      properties:
        id:
          type: string
          format: uuid
    CreateSnapshotRequest:
      type: object
    CreateSnapshotResponse:
      type: object
      required:
      - id
      properties:
        id:
          type: string
          format: uuid
    CreateTemplateReq:
      type: object
      required:
      - name
      - spec
      properties:
        name:
          type: string
        spec:
          $ref: '#/components/schemas/TemplateSpec'
    CreateTemplateResp:
      type: object
      required:
      - id
      properties:
        id:
          type: string
          format: uuid
    CreateVmReq:
      type: object
      required:
      - name
      - vcpu
      - mem_mib
      properties:
        kernel_image_id:
          type: string
          format: uuid
          nullable: true
        kernel_path:
          type: string
          nullable: true
        mem_mib:
          type: integer
          format: int32
          minimum: 0
        name:
          type: string
        rootfs_image_id:
          type: string
          format: uuid
          nullable: true
        rootfs_path:
          type: string
          nullable: true
        source_snapshot_id:
          type: string
          format: uuid
          nullable: true
        vcpu:
          type: integer
          format: int32
          minimum: 0
    CreateVmResponse:
      type: object
      required:
      - id
      properties:
        id:
          type: string
          format: uuid
    GetImageResp:
      type: object
      required:
      - item
      properties:
        item:
          $ref: '#/components/schemas/Image'
    GetSnapshotResponse:
      type: object
      required:
      - item
      properties:
        item:
          $ref: '#/components/schemas/Snapshot'
    GetTemplateResp:
      type: object
      required:
      - item
      properties:
        item:
          $ref: '#/components/schemas/Template'
    GetVmResponse:
      type: object
      required:
      - item
      properties:
        item:
          $ref: '#/components/schemas/Vm'
    HostHeartbeatRequest:
      type: object
      properties:
        capabilities:
          nullable: true
    Image:
      type: object
      required:
      - id
      - kind
      - name
      - host_path
      - sha256
      - size
      - created_at
      - updated_at
      properties:
        created_at:
          type: string
          format: date-time
        host_path:
          type: string
        id:
          type: string
          format: uuid
        kind:
          type: string
        name:
          type: string
        project:
          type: string
          nullable: true
        sha256:
          type: string
        size:
          type: integer
          format: int64
        updated_at:
          type: string
          format: date-time
    InstantiateSnapshotReq:
      type: object
      properties:
        name:
          type: string
          nullable: true
    InstantiateSnapshotResp:
      type: object
      required:
      - id
      - name
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
    InstantiateTemplateReq:
      type: object
      required:
      - name
      properties:
        name:
          type: string
    InstantiateTemplateResp:
      type: object
      required:
      - id
      properties:
        id:
          type: string
          format: uuid
    ListImagesResp:
      type: object
      required:
      - items
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/Image'
    ListSnapshotsResponse:
      type: object
      required:
      - items
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/Snapshot'
    ListTemplatesResp:
      type: object
      required:
      - items
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/Template'
    ListVmsResponse:
      type: object
      required:
      - items
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/Vm'
    OkResponse:
      type: object
      required:
      - ok
      properties:
        ok:
          type: boolean
    RegisterHostRequest:
      type: object
      required:
      - name
      - addr
      properties:
        addr:
          type: string
        capabilities: {}
        name:
          type: string
    RegisterHostResponse:
      type: object
      required:
      - id
      properties:
        id:
          type: string
          format: uuid
    Snapshot:
      type: object
      required:
      - id
      - vm_id
      - snapshot_path
      - mem_path
      - size_bytes
      - state
      - created_at
      - updated_at
      properties:
        created_at:
          type: string
          format: date-time
        id:
          type: string
          format: uuid
        mem_path:
          type: string
        size_bytes:
          type: integer
          format: int64
        snapshot_path:
          type: string
        state:
          type: string
        updated_at:
          type: string
          format: date-time
        vm_id:
          type: string
          format: uuid
    TailLogResponse:
      type: object
      required:
      - text
      properties:
        text:
          type: string
    TemplateSpec:
      type: object
      required:
      - vcpu
      - mem_mib
      properties:
        kernel_image_id:
          type: string
          format: uuid
          nullable: true
        kernel_path:
          type: string
          nullable: true
        mem_mib:
          type: integer
          format: int32
          minimum: 0
        rootfs_image_id:
          type: string
          format: uuid
          nullable: true
        rootfs_path:
          type: string
          nullable: true
        vcpu:
          type: integer
          format: int32
          minimum: 0
    Vm:
      type: object
      required:
      - id
      - name
      - state
      - host_id
      - host_addr
      - api_sock
      - tap
      - log_path
      - http_port
      - fc_unit
      - vcpu
      - mem_mib
      - kernel_path
      - rootfs_path
      - created_at
      - updated_at
      properties:
        api_sock:
          type: string
        created_at:
          type: string
          format: date-time
        fc_unit:
          type: string
        host_addr:
          type: string
        host_id:
          type: string
          format: uuid
        http_port:
          type: integer
          format: int32
        id:
          type: string
          format: uuid
        kernel_path:
          type: string
        log_path:
          type: string
        mem_mib:
          type: integer
          format: int32
        name:
          type: string
        rootfs_path:
          type: string
        source_snapshot_id:
          type: string
          format: uuid
          nullable: true
        state:
          type: string
        tap:
          type: string
        template_id:
          type: string
          format: uuid
          nullable: true
        updated_at:
          type: string
          format: date-time
        vcpu:
          type: integer
          format: int32
tags:
- name: Hosts
  description: Host lifecycle operations.
- name: Templates
  description: Template management APIs.
- name: VMs
  description: Virtual machine lifecycle APIs.
- name: Images
  description: Image registry APIs.
- name: Snapshots
  description: Snapshot management APIs.
- name: Logs
  description: Development log utilities.
